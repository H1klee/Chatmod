plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

version = mod_version
group = mod_group_id

base {
    archivesName = mod_id
}

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"

// Consolidated repositories block
repositories {
    mavenCentral() // For LuckPerms API and other general dependencies
    maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' } // For Spigot API
    // ForgeGradle usually adds its own repository (maven.minecraftforge.net) automatically.
}

minecraft {
    mappings channel: mapping_channel, version: mapping_version
    copyIdeResources = true
    runs {
        configureEach {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }
        client {
        }
        server {
            args '--nogui'
        }
        data {
            workingDirectory project.file('run-data')
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

// Consolidated dependencies block
dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    // For Spigot/Bukkit API - needed for Bukkit.getServicesManager()
    compileOnly 'org.spigotmc:spigot-api:1.16.5-R0.1-SNAPSHOT'

    // For LuckPerms API - use compileOnly so it's not bundled by shadowJar
    // and uses the one from the LuckPerms plugin on the server at runtime.
    implementation 'net.luckperms:api:5.4'
}

tasks.named('processResources', ProcessResources).configure {
    def replaceProperties = [
            minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
            forge_version: forge_version, forge_version_range: forge_version_range,
            loader_version_range: loader_version_range,
            mod_id: mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors: mod_authors, mod_description: mod_description,
    ]
    inputs.properties replaceProperties
    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                'Specification-Title'     : mod_id,
                'Specification-Vendor'    : mod_authors,
                'Specification-Version'   : '1', // We are version 1 of ourselves
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.jar.archiveVersion,
                'Implementation-Vendor'   : mod_authors,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
    finalizedBy 'reobfJar'
}

shadowJar {
    archiveClassifier.set('') // Keep this if you want the main jar to be the shaded one
    dependencies {
        include(dependency('net.luckperms:api:5.4'))
    }
    // You might need to add configurations to minimize other bundled dependencies
    // if the JAR size becomes an issue again, but let's start with this.
}

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            // If you want to publish the jar that shadowJar produces (which includes dependencies other than compileOnly ones):
            // from components.shadow // Use this if you have shadow plugin and want to publish the fat jar
            // Otherwise, for a regular mod jar (without shaded deps other than what ForgeGradle includes):
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

//The java.toolchain was already set at the top, so this second one is not needed here.
 java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(8))
    }
 }